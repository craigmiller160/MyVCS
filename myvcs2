#!/bin/bash
# SCRIPT
# NAME: myvcs
# DESCRIPTION: This script is the main executible for the myvcs script
#				series. It is the entry point for all script commands,
#				and it will call all the other scripts associated with it.
# OPTIONS:
#			[command] : (Required) The name of the command that this script will execute.
#							Each command calls another script for that specific function.
#			[options...] : (Optional) The various sub-scripts require various amounts of
#							options. What will and won't be required varies depending on
#							which command is used.

# Get the current, starting directory location
CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

###TODO need to add color styling for errors to this

#### TODO document this
function validate_yes_no {

	case $1 in
		n)
			return 0
		;;
		y)
			return 0
		;;
		'')
			return 1
		;;
		*)
			echo "  Invalid entry! Please try again."
			return 1
		;;
	esac

}

####TODO document this
function validate_path {

	case $1 in
		'')
			return 1
		;;
		*)
			if [ -d $1 ]; then
				return 0
			else
				echo "  Error! Directory doesn't exist"
				return 1
			fi
		;;
	esac

}

### TODO document this
function initial_configure_myvcs {

	echo "  Myvcs does not appear to be configured. This is expected with a first time run, but can also be due to changes in how it is accessed from your PATH."
	echo ""

	configure=""
	validate_yes_no
	while [[ $? -ne 0 ]]; do
		printf "  Do you want to start the configuration process now? (y/n): "
		read configure
		validate_yes_no $configure
	done

	if [ $configure == 'n' ]; then
		echo ""
		echo "  Thank you. Please return to this configuration tool when you are ready."
		exit 0
	fi

	echo ""
	echo "  CONFIGURE ACCESS FROM PATH"

	echo ""
	echo "  For ideal performance, the myvcs application needs to be available on your system's PATH, either directory or through a simlink."
	echo "  This should be done first, prior to other configuration. Once that is done, the rest of the configuration can begin."
	echo ""

	begin=""
	validate_yes_no
	while [[ $? -ne 0 ]]; do
		printf "  Have you completed myvcs PATH access configuration? (y/n): "
		read begin
		validate_yes_no $begin
	done

	if [ $begin == 'n' ]; then
		echo ""
		echo "  Thank you. Please return to this configuration tool when myvcs is accessible from your PATH."
		exit 0
	fi

	echo ""
	echo "  INSTALLATION LOCATION"
	echo ""

	echo "  For proper operation, myvcs needs to know where it is located."
	echo "  Please enter the full path, from the root of the filesystem, to where myvcs is installed."
	echo ""
	
	path=""
	validate_path $path
	while [[ $? -ne 0 ]]; do
		printf "  myvcs path: "
		read path
		validate_path $path
	done

	printf "# Special file for simlinked calls to myvcs.\n# Defines the actual path to the myvcs directory.\n\nMYVCS_PATH=$path" > "$CURRENT_DIR/.myvcs-path.properties"

	echo "Done"

	return 0

}

# Try getting the properties file path config file
source $CURRENT_DIR/.myvcs-path.properties 1>/dev/null 2>/dev/null

# If can't find them, start initial configuration
if [ $? -ne 0 ]; then
	initial_configure_myvcs
	source $CURRENT_DIR/.myvcs-path.properties 1>/dev/null 2>/dev/null
	if [ $? -ne 0 ]; then
		echo ""
		echo "  Error! Still unable to locate configuration. Please try running this config utility again."
	fi
else
	echo "Found file"
fi

echo $MYVCS_PATH
